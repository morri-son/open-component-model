version: '3'

vars:
  DEFAULT_CLI_PLUGIN_LOCATION:
    sh: 'echo {{env "HOME"}}/.config/ocm/plugins'

  # Additional vars for release/build pipeline
  PROVIDER: ocm.software
  NAME: plugins/helminput
  OUTDIR: "{{ .TASKFILE_DIR }}/tmp"
  COMPONENT_CONSTRUCTOR_FILE: "{{ .OUTDIR }}/component-constructor.yaml"
  DEFAULT_VERSION:
    sh: |
      echo "0.0.0-$(date -u +%Y%m%d%H%M%S)-$(git rev-parse --short=12 HEAD)"
  VERSION: '{{ .VERSION | default .DEFAULT_VERSION }}'

tasks:
  tmp:
    cmds:
      - mkdir -p tmp
    status:
      - test -d tmp

  build:
    cmds:
      - go build -o tmp/testdata/test-input-plugin cmd/main.go

  test:
    sources:
      - ./**/*.go
      - ./go.mod
      - ./go.sum
    cmds:
      - go test -v -coverprofile=tmp/coverage.out ./...
    deps:
      - tmp
      - build

  install/local:
    desc: 'Installs the plugin locally to the default location'
    deps:
      - build
    cmd: 'install $(pwd)/tmp/testdata/test-input-plugin {{.DEFAULT_CLI_PLUGIN_LOCATION}}/helm'

  # ===== New tasks for release workflow =====
  download/deps:
    internal: true
    cmd: go mod download

  build:target:
    desc: "Build Helm input plugin for a specific GOOS/GOARCH target and emit resource YAML for constructor"
    internal: true
    silent: false
    prefix: '{{ .GOOS }}-{{ .GOARCH }}'
    generates:
      - '{{ .OUTDIR }}/bin/helminput-{{ .GOOS }}-{{ .GOARCH }}'
      - '{{ .OUTDIR }}/resources/helminput-{{ .GOOS }}-{{ .GOARCH }}.yaml'
    deps:
      - tmp
      - download/deps
    cmds:
      - cmd: |
          mkdir -p {{ .OUTDIR }}/bin {{ .OUTDIR }}/resources
          GOOS={{ .GOOS }} GOARCH={{ .GOARCH }} go build \
            -o {{ .OUTDIR }}/bin/helminput-{{ .GOOS }}-{{ .GOARCH }} ./cmd/main.go
      - |
        cat > {{ .OUTDIR }}/resources/helminput-{{ .GOOS }}-{{ .GOARCH }}.yaml <<EOF
        - name: binary
          type: ocmPlugin
          version: {{ .VERSION }}
          extraIdentity:
            os: {{ .GOOS }}
            architecture: {{ .GOARCH }}
          relation: local
          input:
            type: file
            path: {{ .OUTDIR }}/bin/helminput-{{ .GOOS }}-{{ .GOARCH }}
        EOF

  build:matrix:
    desc: "Build Helm input plugin for all supported targets"
    deps:
      - for:
          matrix:
            GOOS: [ "linux", "darwin" ]
            GOARCH: [ "amd64", "arm64" ]
        task: build:target
        vars:
          GOOS: '{{ .ITEM.GOOS }}'
          GOARCH: '{{ .ITEM.GOARCH }}'

  generate/component-constructor:
    desc: "Generate the component-constructor.yaml by aggregating all built resources"
    generates:
      - '{{ .COMPONENT_CONSTRUCTOR_FILE }}'
    deps:
      - build:matrix
    silent: true
    cmds:
      - |
        cat <<EOF > {{ .COMPONENT_CONSTRUCTOR_FILE }}
        name: {{ .PROVIDER }}/{{ .NAME }}
        version: {{ .VERSION }}
        provider:
          name: {{ .PROVIDER }}
        labels:
          - name: category
            value: input
          - name: registry
            value: official
          - name: description
            value: Official Helm Input plugin
        resources:
        EOF
      - |
        for file in {{ .OUTDIR }}/resources/*.yaml; do
          cat "$file" >> {{ .COMPONENT_CONSTRUCTOR_FILE }}
        done
      - cat "{{ .COMPONENT_CONSTRUCTOR_FILE }}"
